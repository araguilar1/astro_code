
// SetManeuverError()
// Copy planned maneuver characteristics to burn object to be executed, and apply maneuver execution errors
//
// Inputs:
//       - see below
//
// Dependencies:
//     - ConeClockMnvrError()
//
// Assumptions:
//     - None
// 
Define Procedure SetManeuverError(	RandomNumberGenerator rand, 	/* Input/       - RandomNumberGenerator to be use for adding random errors  */
									FiniteBurn        planBurn, 	/* Input/       - the planned Finite Burn maneuver  */
									Variable            ptgErr, 	/* Input/       - the 3-sigma pointing error to be applied, in Degrees  */
									Variable     percentMagErr, 	/* Input/       - the 3-sigma magnitude error to be applied in percent  */
									FiniteBurn         exeBurn);	/*      /Output - the "as-executed burn, with errors applied  */

	// first copy plan burn to exe burn
	exeBurn.AttitudeSystem    = planBurn.AttitudeSystem;
	exeBurn.BurnDirection     = planBurn.BurnDirection;
	exeBurn.BurnDuration      = planBurn.BurnDuration;
	exeBurn.ManeuverStartTime = planBurn.ManeuverStartTime;

	Call ConeClockMnvrError(rand, ptgErr, exeBurn);

	exeBurn.ThrustScaleFactor = planBurn.ThrustScaleFactor + rand.GaussianDistribution(0, percentMagErr/300);

EndProcedure;