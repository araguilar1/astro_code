
// ReadHorizonsVectorTable()
// Reads a Horizons Vector Table as produced by the JPL Horizons system
// 
// Inputs / Outputs (see below)
//
// Dependencies:  
//       None
//
// Assumptions:
//       None
//  

Define Procedure ReadHorizonsVectorTable(	String   filename, 	/* Input/       - filename and path to the Horizons Vector Table  */
											Spacecraft     sc);	/*      /Output - Spacecraft to be populated with ephemeris data  */
	
	
	FileInterface input;
	Variable i;
	Variable j;
	Variable n;
	
	Array vector_data;
	Array indices;
	
	String line;
	String start_of_eph = "$$SOE";
	String end_of_eph   = "$$EOE";
	
	StringArray line_data;
	
	input.Clear();
	indices.Clear();
	vector_data.Clear();
	
	
	input.Filename = filename;
	
	input.ReadMode = 1;
	input.WriteMode = 0;
	
	If (!input.Open());
		
		Diagnostics.ReportErrorMessage(0, "Unable to open file: "+filename);
		ExitProcedure;
	End;
	
	line = "";
	
	While ( line != start_of_eph);
		
		line = input.GetLine();
	End;
	
	
	// set up spacecraft ephemeris
	EphemerisVector vector;
	
	If (vector.NumberOfColumns == 0);// in case this procedure gets called in a loop
		vector.AddColumns({"X", "Y", "Z", "VX", "VY", "VZ"});
	End;
	
	If ((sc.Propagator IsType Ephemeris) == 0);
		sc.SetPropagatorType("Ephemeris");
	End;
	
	Alias eph = (sc.Propagator AsType Ephemeris);
	
	eph.ClearEphemeris();
	
	vector_data.Dimension = 6;
	indices.FillLinspace(0, 5, 6);
	
	While ( line != end_of_eph);
		
		// epoch line
		line      = input.GetLine();
		line_data = line.Split(" ");
		If (line_data.Dimension < 6);
			Continue;
		End;
		
		vector.Epoch = TimeTools.ConvertTime(TimeSpan.FromDays(line_data[0].ToVariable()), "TDB", "Julian Date", "TAI", "MJD GSFC");
		// double check
		//vector.Epoch = TimeTools.ParseCalendarDate( line_data[3]+" "+line_data[4], "YYYY**-**Mmm**-**DD hh:mm:ss.ssss", "TDB", "TAI", "MJD GSFC");
		
		
		
		// position & velocity lines
		For i = 0 to 1;
			line      = input.GetLine();
			line_data = line.Split(" =");
			If (line_data.Dimension < 6);
				Continue;
			End;
			
			For j = 0 to 2;
				vector_data[3*i+j] = line_data[2*j+1].ToVariable();
			End;
		
		End;
		
		// treat ICRF pos/vel data from the file as MJ2000 for now
		vector.SetVariableValues(indices, vector_data);
		
		eph.AddVectorData(vector);
		
	End;
	
	input.Close();
	
	eph.CurrentIndex = 0;
	
EndProcedure;